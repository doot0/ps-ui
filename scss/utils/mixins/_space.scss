// space
//
// Applies margins or paddings to a given element according to predefined UI sizes.
//
// $size - Target UI size (xs, sm, md, lg, xl)
// $type - If the space should apply inwards or outwards in regards to the box model (outer, inner)
// $direction - The axis or direction to apply the spacing in. (top, bottom, left, right, x, y) `[optional]`
// $negative - Applies inverse spacing. Does not work for paddings. (negative) `[optional]`
// $rem - If the size output should be in rems. (rem) `[optional]`
//
// Styleguide: Mixins.space
@mixin space($size, $type, $direction: null, $negative: null, $rem: null) {

  $_property: if($type == 'outer', 'margin', 'padding');
  $_space: map-get($cfg-spacing, $size);
  $_result-space: em($_space);

  @if $rem == 'rem' {
    $_result-space: rem($_space);
  }

  @if $negative == 'negative'  {
    @if $_property == 'padding' {
      @error 'Cannot use negative length on padding.';
    } @else if $_property == 'margin' {
      $_result-space: -$_result-space;
    }
  }

  @if $direction == null {
    #{$_property}: $_result-space;
  } @else {
    @if($direction == 'top' or $direction == 'y')    { #{$_property}-top: $_result-space; }
    @if($direction == 'bottom' or $direction == 'y') { #{$_property}-bottom: $_result-space; }
    @if($direction == 'left' or $direction == 'x')   { #{$_property}-left: $_result-space; }
    @if($direction == 'right' or $direction == 'x')  { #{$_property}-right: $_result-space; }
  }

}
