// This file contains a bunch of vendor prefixes that need to be used in a
// specific order for the sake of Safari. There are also some instances where
// 4th level nesting straight up needs to happen.
//
// I should also add that while grids are technically an object, they are
// somewhat implementation specific - hence why this grid is a generic and not
// an object.
//
// Grids are weird. ¯\_(ツ)_/¯
//
// scss-lint:disable VendorPrefix PropertySortOrder NestingDepth

// Grid
//
// Namespace: `o-grid`
//
// Reversed rows, auto-width items, gutterless rows/items, breakpoints.
//
// Markup: _grid.html
//
// Styleguide: Generics.grid
$_use-old-spec: false;
$_cols: $cfg-grid-cols;

@mixin _grid-item {
  @include space(xs, inner, x, null, rem);

  @if $_use-old-spec {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 auto;
    -ms-flex: 0 0 auto;
  }

  box-sizing: border-box;
}

.o-grid {

  @include space(sm, outer, x, null, rem);

  &__row {
    margin-right: -.5rem;
    margin-left: -.5rem;

    display: flex;
    flex: 0 1 auto;
    flex-direction: row;
    flex-wrap: wrap;

    &--gutterless {
      margin-left: 0;
      margin-right: 0;
    }

    &--reverse {
      flex-direction: row-reverse;

      @each $breakpoint, $grid-width in $cfg-breakpoints {
        @include breakpoint(#{$breakpoint}) {
          &-#{$breakpoint} {
            flex-direction: row-reverse;
          }
        }
      }

    }

    & & {
      margin-left: 0;
      margin-right: 0;
    }

  }

  &__item {

    @include _grid-item;
    flex: 1;

    &--gutterless {
      padding-left: 0 !important;
      padding-right: 0 !important;
    }

  }

  @each $breakpoint, $grid-width in $cfg-breakpoints {

    @include breakpoint(#{$breakpoint}) {

      &--non-fluid {
        max-width: $grid-width;
        margin: auto;
      }

      @for $i from 1 through $_cols {

        $_width: unquote('#{100 / $_cols * $i}%');

        &__item--#{$breakpoint}-#{$i} {
          @include _grid-item;

          @if $_use-old-spec {
            -webkit-flex-basis: $_width;
            -ms-flex-preferred-size: $_width;
          }

          flex: 0 0 auto;
          flex-basis: $_width;
          max-width: $_width;
        }

        &__item--#{$breakpoint}-push-#{$i} {
          margin-left: $_width;
        }

      }
    }
  }

}
